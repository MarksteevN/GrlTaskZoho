<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Granite River Labs</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" @onclick = "Load_Projects" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Load Projects
            </NavLink>
        </div>
        @if (Project_Name == null)
        {
            <text>Loading...</text>
        }
        else
        {
            foreach (var item in Project_Name.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <div class="nav-item px-3 box">
                    <NavLink class="nav-link" href="projectlist" @onclick = "() => Select_Project(index)" Match="NavLinkMatch.All">
                        <span aria-hidden="true"></span> @value
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    public List<string> Project_Name { get; set; }
    public List<string> Project_Link { get; set; }
    public int jsoncount { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized() 
    {
        Project_Name = new List<string>();   
        Project_Link = new List<string>();
    }

    public void Load_Projects()
    {
        // Calling the Method to regenerates the Access Token
        RegenerateAcc_Token.RegenerateAccessToken(Linksforall.A_Token, EnumClass.METHOD.POST.ToString());
        
        // Setting the method to get and calling a operations method to get the project list
        RegenerateAcc_Token.Operations(Linksforall.AllProjects, RegenerateAcc_Token.access_token, EnumClass.METHOD.GET.ToString());
        
        //Creating the Projects.txt file and storing the obtained dat in the text file specified
        string filep = Directory.GetCurrentDirectory();
        System.IO.File.WriteAllText(filep + @"\Appdata\Projects.txt", RegenerateAcc_Token.jstring);
        
        // Location of the filepath to Read and to deserialize the data
        string FilePath = @"D:\Marksteev_GRL\Github Files\GRLZOHO\GRLZOHO\Appdata\Projects.txt";
        var myJsonString = File.ReadAllText(FilePath);
        var myJsonObject = JsonConvert.DeserializeObject<ProjectDetails>(myJsonString);
        
        //Total count of the projects
        jsoncount = myJsonObject.projects.Count;
        
        //Iterates through all the projects name and link
        for( var i = 0; i < jsoncount; i++)
        {
            Project_Name.Add(myJsonObject.projects[i].name);
            Project_Link.Add(myJsonObject.projects[i].link.self.url);
        }
    }

    public void Select_Project(int indNo)
    {
        HorizontalNavMenu horizontalNavMenu = new HorizontalNavMenu();
        horizontalNavMenu.St_Pt_Url(Project_Link[indNo]);

    }
}