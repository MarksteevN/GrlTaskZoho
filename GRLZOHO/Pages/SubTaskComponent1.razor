@page "/projectlist/task/taskdetails/SubTask/Details_Sub"

<table class="table table-bordered table-striped mb-0">
    <thead class="bg-warning">
            @foreach (var item in S_Name.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th colspan="2" class="center"> @value </th>                
                </tr>
            }
        </thead>
        <tbody>
            @foreach (var item in S_Name.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>SubTask Name</th>
                    <td> @value </td>                
                </tr>
            }
            @foreach (var item in Priority.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>Priority</th>
                    <td> @value </td>                
                </tr>
            }
            @foreach (var item in Created_Person.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>Created Person</th>
                    <td> @value </td>                
                </tr>
            }
            @foreach (var item in TaskList_N.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>TaskList Name</th>
                    <td> @value </td>                
                </tr>
            }
            @foreach (var item in Status_S.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>Status</th>
                    <td> @value </td>                
                </tr>
            }
            @foreach (var item in S_Completion.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>Completion Percentage</th>
                    <td> @value </td>                
                </tr>
            }
            @foreach (var item in S_Owners.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>Owner</th>
                    <td> @value </td>                
                </tr>
            }
             @foreach (var item in S_Description.Select((value, i) => new { i, value }))
            {
                var value = item.value;
                var index = item.i;
                <tr>
                    <th>Description</th>
                    <td> @((MarkupString)value) </td>                
                </tr>
            }
        </tbody>
   
    </table>
    <br />
    @foreach (var item in S_Web.Select((value, i) => new { i, value }))
    {
        var value = item.value;
        var index = item.i;
        <center>
            <button class="button button2" @onclick = "(() => NavigateToNewTab(index))">More Details...</button>              
        </center>
    }

@code {

    public List<string> S_Name { get; set; }
    public List<string> Priority { get; set; }
    public List<string> Created_Person { get; set; }
    public List<string> TaskList_N { get; set; }
    public List<string> Status_S { get; set; }
    public List<string> S_Owners { get; set; }
    public List<string> S_Completion { get; set; }
    public List<string> S_Description { get; set; }
    public List<string> S_Web { get; set; }

    protected override void OnInitialized()
    {
        S_Name = new List<string>();
        S_Completion = new List<string>();
        Priority = new List<string>();
        Created_Person = new List<string>();
        TaskList_N = new List<string>();
        Status_S = new List<string>();
        S_Web = new List<string>();
        S_Owners = new List<string>();
        S_Description = new List<string>();
        STask_Details();
    }
    public void STask_Details()
    {
        string File_Path = $"{NavMenu.Selected_SubTask}";
        System.IO.File.WriteAllText(File_Path, RegenerateAcc_Token.QueryResponse_Json);
        var myJsonString = File.ReadAllText(File_Path);

        var myJsonObject = JsonConvert.DeserializeObject<SubTaskDetails>(myJsonString);

        for (var i = 0; i < myJsonObject.tasks.Count; i++)
        {
            S_Name.Add(myJsonObject.tasks[i].name);
            Priority.Add(myJsonObject.tasks[i].priority);
            Created_Person.Add(myJsonObject.tasks[i].created_person);
            TaskList_N.Add(myJsonObject.tasks[i].tasklist.name);
            Status_S.Add(myJsonObject.tasks[i].status.name);
            S_Completion.Add(myJsonObject.tasks[i].percent_complete);
            S_Web.Add(myJsonObject.tasks[i].link.web.url);
            S_Description.Add(myJsonObject.tasks[i].description);
            for (var j = 0; j < myJsonObject.tasks[i].details.owners.Count; j++)
            {
                S_Owners.Add(myJsonObject.tasks[i].details.owners[j].name);
            }
        }

    }
    public async Task NavigateToNewTab(int inf)
    {
        var confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Do you Want to See SubTask Indetail ?");
        if (confirmed)
        {
            string url = S_Web[inf];
            await jsRuntime.InvokeAsync<object>("open", url, "_blank");
        }
    }
}